#include "mainwindow.h"
#include "databasemanager.h"
#include "taskwidget.h"

//#include <QVBoxLayout>
//#include <QLabel>
//#include <QFrame>

MainWindow::MainWindow(int userId, QWidget *parent)
    : QMainWindow(parent), currentUserId(userId)
{
    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π –≤—ñ–¥–∂–µ—Ç
    QWidget *centralWidget = new QWidget(this);
    this->setCentralWidget(centralWidget);

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π –ª–µ–π–∞—É—Ç
    QVBoxLayout *layout = new QVBoxLayout(centralWidget);



    // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–µ—Ä—Ö–Ω—é –ø–∞–Ω–µ–ª—å
    QFrame *topPanel = createStylizedFrame(this);
    QHBoxLayout *topLayout = new QHBoxLayout();
    topPanel->setLayout(topLayout);

    // –ö–Ω–æ–ø–∫–∞ –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é
    QPushButton *menuButton = new QPushButton("‚â°", this);
    menuButton->setFixedSize(30, 30);

    // –ö–Ω–æ–ø–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ
    QPushButton *createTaskButton = new QPushButton("Ôºã –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–¥–∞—á—É", this);
    createTaskButton->setFixedHeight(30);

    // –Ü–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ + (—É–º–æ–≤–Ω–æ) —ñ–∫–æ–Ω–∫–∞
    QString userName = DatabaseManager::instance().getUserName(currentUserId);
    //userLabel->setText("üë§ " + userName);

    QLabel *userLabel = new QLabel(userName, this);
    userLabel->setAlignment(Qt::AlignRight | Qt::AlignVCenter);
    userLabel->setStyleSheet("color: black; font-weight: bold; padding-right: 10px;");

    // –î–æ–¥–∞—î–º–æ –≤ layout
    topLayout->addWidget(menuButton);
    topLayout->addStretch(); // —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –º—ñ–∂ –∫–Ω–æ–ø–∫–∞–º–∏
    topLayout->addWidget(createTaskButton);
    topLayout->addStretch();
    topLayout->addWidget(userLabel);



    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–∏–∂–Ω—é –æ—Å–Ω–æ–≤–Ω—É –ø–∞–Ω–µ–ª—å
    QScrollArea *scrollArea = new QScrollArea(this);
    scrollArea->setWidgetResizable(true);  // —â–æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –º–∞—Å—à—Ç–∞–±—É–≤–∞–ª–æ—Å—å
    scrollArea->setFrameShape(QFrame::NoFrame);

    // –í–º—ñ—Å—Ç –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    scrollWidget = new QWidget();
    taskListLayout = new QVBoxLayout(scrollWidget);

/*
    // –ü—Ä–∏–∫–ª–∞–¥ –∫—ñ–ª—å–∫–æ—Ö –∑–∞–¥–∞—á (—Ç–∏–º—á–∞—Å–æ–≤–æ)
    for (int i = 1; i <= 10; ++i) {
        QLabel *task = new QLabel(QString("üìù –ó–∞–¥–∞—á–∞ #%1").arg(i));
        task->setStyleSheet("padding: 10px; background: #f0f0f0; border-radius: 5px;");
        taskListLayout->addWidget(task);
    }
*/

    // –î–æ–¥–∞—î–º–æ stretch, —â–æ–± –∑–∞–¥–∞—á—ñ –ø—Ä–∏—Ç–∏—Å–∫–∞–ª–∏—Å—å –≤–≥–æ—Ä—É
    taskListLayout->addStretch();

    scrollWidget->setLayout(taskListLayout);
    scrollArea->setWidget(scrollWidget);




    // ========== Side Menu ==========

    sideMenu = new QFrame(this);
    sideMenu->setFixedWidth(200);
    sideMenu->setStyleSheet("background-color: #ddd; color: white; border: 1px solid #555;");
    sideMenu->move(-200, 0);  // —Å–ø–æ—á–∞—Ç–∫—É –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ –∑–ª—ñ–≤–∞
    sideMenu->setParent(this);
    sideMenu->raise();

    QVBoxLayout *sideLayout = new QVBoxLayout(sideMenu);
    QPushButton *btnAssignedByMe = new QPushButton("–ü–æ—Å—Ç–∞–≤–ª–µ–Ω—ñ –∑–∞–¥–∞—á—ñ", sideMenu);
    QPushButton *btnAssignedToMe = new QPushButton("–û—Ç—Ä–∏–º–∞–Ω—ñ –∑–∞–¥–∞—á—ñ", sideMenu);
    btnAssignedByMe->setStyleSheet("background-color: #bbb; color: #000; font-weight: bold; padding-right: 10px;");
    btnAssignedToMe->setStyleSheet("background-color: #bbb; color: #000; font-weight: bold; padding-right: 10px;");
    sideLayout->addWidget(btnAssignedByMe);
    sideLayout->addWidget(btnAssignedToMe);
    sideLayout->addStretch();

    // ========== –ê–Ω—ñ–º–∞—Ü—ñ—è –º–µ–Ω—é ==========
    menuAnimation = new QPropertyAnimation(sideMenu, "pos", this);
    menuAnimation->setDuration(300);

    // ========== –ó–∞–º—ñ–Ω–∞ –∫–Ω–æ–ø–∫–∏ "‚â°" ==========
    connect(menuButton, &QPushButton::clicked, this, &MainWindow::toggleSideMenu);

    // ========== –û–±—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è ==========
    connect(btnAssignedByMe, &QPushButton::clicked, [=]() {
        loadTasks(TaskViewType::AssignedByMe);
        toggleSideMenu();
    });
    connect(btnAssignedToMe, &QPushButton::clicked, [=]() {
        loadTasks(TaskViewType::AssignedToMe);
        toggleSideMenu();
    });




    //–î–æ–¥–∞—î–º–æ –≤—Å–µ –≤ layout
    layout->addWidget(topPanel, 11);
    layout->addWidget(scrollArea, 89);
    //–ü—Ä–∏—Å–≤–æ—é—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π –ª–µ–π–∞—É—Ç —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–º—É –≤—ñ–¥–∂–µ—Ç—É
    centralWidget->setLayout(layout);

    // –ü—Ä–∏–∫–ª–∞–¥ –ø—Ä–æ—Å—Ç–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    //QLabel *label = new QLabel("–í—ñ—Ç–∞—î–º–æ –≤ ToDoApp!", this);
    //layout->addWidget(label);


    sideMenu->raise();  // –©–æ–± –±–æ–∫–æ–≤–µ –º–µ–Ω—é –±—É–ª–æ –ø–æ–≤–µ—Ä—Ö —É—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    sideMenu->show();   // –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ –≤–æ–Ω–æ –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è

    currentView = TaskViewType::AssignedByMe;
    loadTasks(currentView);
    sideMenu->setFixedHeight(this->height());

}

MainWindow::~MainWindow() {}

QFrame *MainWindow::createStylizedFrame(QWidget *parent) {
    QFrame *frame = new QFrame(parent);
    frame->setStyleSheet(
        "QFrame {"
        //"    background-color: #2b2b2b;"
        "    color: white;"
        "    border: none;"
        "    border: 1px solid #654b25;"
        "    border-radius: 5px;"
        "    padding: 4px;"
        "}"
        );

    QGraphicsDropShadowEffect *shadowEffect = new QGraphicsDropShadowEffect();
    shadowEffect->setBlurRadius(15);
    shadowEffect->setOffset(5, 5);
    shadowEffect->setColor(QColor(0, 0, 0, 30));
    frame->setGraphicsEffect(shadowEffect);

    return frame;
}

void MainWindow::toggleSideMenu() {
    int startX = sideMenu->x();
    int endX = (startX < 0) ? 0 : -200; // –ü–æ–∫–∞–∑–∞—Ç–∏ –∞–±–æ —Å—Ö–æ–≤–∞—Ç–∏
    menuAnimation->stop();
    menuAnimation->setStartValue(QPoint(startX, 0));
    menuAnimation->setEndValue(QPoint(endX, 0));
    menuAnimation->start();
}

void MainWindow::loadTasks(TaskViewType type) {
    currentView = type;

    // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –∑–∞–¥–∞—á
    QLayoutItem *item;
    while ((item = taskListLayout->takeAt(0)) != nullptr) {
        if (item->widget()) item->widget()->deleteLater();
        delete item;
    }

    QList<Task> tasks = DatabaseManager::instance().getTasksByUser(currentUserId, type);

    for (const Task &task : tasks) {
        int counterpartyId = (type == TaskViewType::AssignedByMe) ? task.assigneeId : task.creatorId;
        QString counterparty = DatabaseManager::instance().getUserName(counterpartyId);

        QString labelPrefix = (type == TaskViewType::AssignedByMe) ? "–î–ª—è: " : "–í—ñ–¥: ";
        QString counterpartyName = labelPrefix + counterparty;

        TaskWidget *widget = new TaskWidget(task, counterpartyName, type, this);



        connect(widget, &TaskWidget::requestEdit, this, &MainWindow::editTask);
        connect(widget, &TaskWidget::requestDelete, this, &MainWindow::deleteTask);
        connect(widget, &TaskWidget::requestStatusChange, this, &MainWindow::changeTaskStatus);
        connect(widget, &TaskWidget::requestDetails, this, &MainWindow::showTaskDetails);



        //widget->setStyleSheet("background-color: white; border: 2px solid #444; border-radius: 8px;");
        taskListLayout->addWidget(widget);
    }

    taskListLayout->addStretch();
}

void MainWindow::editTask(const Task &task) {
    // TODO: –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤—ñ–∫–Ω–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    qDebug() << "–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ –∑ ID:" << task.id;
}

void MainWindow::deleteTask(int taskId) {
    // TODO: –í–∏–¥–∞–ª–∏—Ç–∏ –∑ –ë–î
    qDebug() << "–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ –∑ ID:" << taskId;
}

void MainWindow::changeTaskStatus(int taskId, const QString &newStatus) {
    // TODO: –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤ –ë–î
    qDebug() << "–ó–º—ñ–Ω–∞ —Å—Ç–∞—Ç—É—Å—É –∑–∞–¥–∞—á—ñ " << taskId << " –Ω–∞ " << newStatus;
}

void MainWindow::showTaskDetails(const Task &task)
{
    // TODO: –ó—Ä–æ–±–∏—Ç–∏ –≤—ñ–∫–Ω–æ –ø—Ä–æ–≥–ª—è–¥–∞–Ω–Ω—è –æ–ø–∏—Å—É
    qDebug() << "–ü—Ä–æ–≥–ª—è–¥–∞–Ω–Ω—è –æ–ø–∏—Å—É:" << task.id;
}


void MainWindow::resizeEvent(QResizeEvent *event) {
    QMainWindow::resizeEvent(event);
    sideMenu->setFixedHeight(this->height());
}
